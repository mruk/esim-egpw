/*
** SQLite
** m_market is money real market;
** http://rss.nbp.pl/kursy/tabrss.aspx?n=2007/c/07c107
** c - table C,
** 2007/c/07 - year,
** c107 - table no.
**
** LIBOR... WIBOR:
** https://www.bankier.pl/kredyty-hipoteczne/stopy-procentowe/wibor?rateDate=2008-01-02
*/

DROP TABLE IF EXISTS m_market;

CREATE TABLE IF NOT EXISTS m_market (
  day         TEXT PRIMARY KEY,
  wibor3m_pln REAL,
  libor3m_chf REAL,
  chfbid_nbp  REAL,
  chfask_nbp  REAL
);

/*
** 01 - first month of the year,
** 12 - last month of the year.
*/
INSERT OR REPLACE INTO m_market
(day, wibor3m_pln, libor3m_chf, chfbid_nbp, chfask_nbp) VALUES
 ('2007-06-01', 4.6100, 2.4700, 2.2847, 2.3309),
 ('2008-01-02', 5.6000, 2.7600, 2.3521, 2.3997),
 ('2009-01-02', 5.8400, 0.6483, 2.7769,	2.8331),
 ('2010-01-04', 4.2700, 0.2500, 2.7384,	2.7938),
 ('2011-01-03', 3.9400, 0.1692, 3.1363,	3.1997),
 ('2012-01-02', 4.9900, 0.0517, 3.6413,	3.7149),
 ('2013-01-02', 4.1000, 0.0120, 3.3313,	3.3987),
 ('2014-01-02', 2.7000, 0.0230, 3.3478, 3.4154),
 ('2015-01-02', 2.0600, -0.0630, 3.5475, 3.6191),
 ('2016-01-02', 1.7200, -0.7560, 3.9154, 3.9944),
 ('2017-01-03', 1.7300, -0.7272, 4.0771, 4.1595),
 ('2017-11-15', 1.7300, -0.7410, 3.6081, 3.6809);

SELECT * FROM m_market;


/*
** Numerical Table for Statistics
*/
DROP TABLE IF EXISTS num_tab;

CREATE TABLE IF NOT EXISTS num_tab (
  key INT PRIMARY KEY,
  dec REAL,
  cent REAL
);

INSERT OR REPLACE INTO num_tab (key, dec, cent) VALUES
  (0, 0.0, 0.00), (1, 0.1, 0.01), (2, 0.2, 0.02), (3, 0.3, 0.03), (4, 0.4, 0.04), (5, 0.5, 0.05), (6, 0.6, 0.06), (7, 0.7, 0.07), (8, 0.8, 0.08), (9, 0.9, 0.09),
  (10, 1.0, 0.10), (11, 1.1, 0.11), (12, 1.2, 0.12), (13, 1.3, 0.13), (14, 1.4, 0.14), (15, 1.5, 0.15), (16, 1.6, 0.16), (17, 1.7, 0.17), (18, 1.8, 0.18), (19, 1.9, 0.19),
  (20, 2.0, 0.20), (21, 2.1, 0.21), (22, 2.2, 0.22), (23, 2.3, 0.23), (24, 2.4, 0.24), (25, 2.5, 0.25), (26, 2.6, 0.26), (27, 2.7, 0.27), (28, 2.8, 0.28), (29, 2.9, 0.29),
  (30, 3.0, 0.30), (31, 3.1, 0.31), (32, 3.2, 0.32), (33, 3.3, 0.33), (34, 3.4, 0.34), (35, 3.5, 0.35), (36, 3.6, 0.36), (37, 3.7, 0.37), (38, 3.8, 0.38), (39, 3.9, 0.39),
  (40, 4.0, 0.40), (41, 4.1, 0.41), (42, 4.2, 0.42), (43, 4.3, 0.43), (44, 4.4, 0.44), (45, 4.5, 0.45), (46, 4.6, 0.46), (47, 4.7, 0.47), (48, 4.8, 0.48), (49, 4.9, 0.49),
  (50, 5.0, 0.50), (51, 5.1, 0.51), (52, 5.2, 0.52), (53, 5.3, 0.53), (54, 5.4, 0.54), (55, 5.5, 0.55), (56, 5.6, 0.56), (57, 5.7, 0.57), (58, 5.8, 0.58), (59, 5.9, 0.59),
  (60, 6.0, 0.60), (61, 6.1, 0.61), (62, 6.2, 0.62), (63, 6.3, 0.63), (64, 6.4, 0.64), (65, 6.5, 0.65), (66, 6.6, 0.66), (67, 6.7, 0.67), (68, 6.8, 0.68), (69, 6.9, 0.69),
  (70, 7.0, 0.70), (71, 7.1, 0.71), (72, 7.2, 0.72), (73, 7.3, 0.73), (74, 7.4, 0.74), (75, 7.5, 0.75), (76, 7.6, 0.76), (77, 7.7, 0.77), (78, 7.8, 0.78), (79, 7.9, 0.79),
  (80, 8.0, 0.80), (81, 8.1, 0.81), (82, 8.2, 0.82), (83, 8.3, 0.83), (84, 8.4, 0.84), (85, 8.5, 0.85), (86, 8.6, 0.86), (87, 8.7, 0.87), (88, 8.8, 0.88), (89, 8.9, 0.89),
  (90, 9.0, 0.90), (91, 9.1, 0.91), (92, 9.2, 0.92), (93, 9.3, 0.93), (94, 9.4, 0.94), (95, 9.5, 0.95), (96, 9.6, 0.96), (97, 9.7, 0.97), (98, 9.8, 0.98), (99, 9.9, 0.99);

SELECT * FROM num_tab;
